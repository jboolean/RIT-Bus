// This file has been autogenerated from parsing an Objective-C header file added in Xcode.
using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace RITNow
{
	public partial class MainBusScreenViewController : UIViewController
	{
		DatePickerView datePickerSheet;
		private UIColor buttonNormalColor, buttonDownColor;

		public MainBusScreenViewController (IntPtr handle) : base (handle)
		{
			buttonNormalColor = new UIColor (0.0625f, 0.0625f, 0.0625f, 1.0f);
			buttonDownColor = new UIColor ((float)29 / 255, (float)82 / 255, (float)189 / 255, 1.0f);

			//bus stop changed listener
			NSNotificationCenter.DefaultCenter.AddObserver ((NSString)"NSUserDefaultsDidChangeNotification", handleSettingsChanged);

		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			this.busTable.Source = new ArrivalListTableViewSource (this.busTable);
			UIImageView background = new UIImageView (UIImage.FromBundle ("images/mainBackground"));
			background.Frame = this.busTable.Frame;
			this.busTable.BackgroundView = background;

			updateStopText ();

		}

		partial void refreshTouched (NSObject sender)
		{
			((ArrivalListTableViewSource)busTable.Source).Refresh ();

		}

		partial void changeDateTouched (NSObject sender)
		{
			BusTableModel model = ((ArrivalListTableViewSource)busTable.Source).model;

			//default to the already selected date, if there is one
			if (model.FutureTime.HasValue)
				datePickerSheet = new DatePickerView (model.FutureTime.Value);
			else//will be null if using now
				datePickerSheet = new DatePickerView ();
			datePickerSheet.DatePicked += datePicked;
			datePickerSheet.ShowInActionSheet (this.View);

			timeButtonView.BackgroundColor = buttonNormalColor;

		}

		void datePicked (bool nowPicked, DateTime date)
		{
			BusTableModel model = ((ArrivalListTableViewSource)busTable.Source).model;
			if (nowPicked) {
				model.FutureTime = null;
				this.currentDateLabel.Text = "Now";
			} else {
				model.FutureTime = date;
				if (date.Date == DateTime.Today)
					this.currentDateLabel.Text = "Today, " + date.ToString ("h:mm tt");
				else if (date.Date == DateTime.Today.AddDays (1.0))
					this.currentDateLabel.Text = "Tomorrow, " + date.ToString ("h:mm tt");
				else
					this.currentDateLabel.Text = date.ToString ("MMM d, h:mm tt");
			}
		

		}


		private void updateStopText ()
		{
			if (this.currentLocationLabel == null)
				return;
			BusStop? preferredStop = BusDB_GTFS_SQL.Instance.getStopInfo (UserPreferences.DefaultStopId);
			if (preferredStop != null)
				this.currentLocationLabel.Text = preferredStop.Value.name;
		}

		/** handle change location preference **/
		private void handleSettingsChanged (NSNotification not)
		{
			updateStopText ();
		}

		/** faking buttons by changing the view background color*/

		//now "button"
		partial void nowButton_TouchDown (NSObject sender)
		{
			timeButtonView.BackgroundColor = buttonDownColor;
		}

		partial void nowButton_TouchUpOutside (NSObject sender)
		{
			timeButtonView.BackgroundColor = buttonNormalColor;
		}
		//stop button
		partial void stopButton_TouchUpInside (NSObject sender)
		{
			stopButtonView.BackgroundColor = buttonNormalColor;
		}

		partial void stopButton_TouchDown (NSObject sender)
		{
			stopButtonView.BackgroundColor = buttonDownColor;
		}

		partial void stopButton_TouchUpOutside (NSObject sender)
		{
			stopButtonView.BackgroundColor = buttonNormalColor;
		}



	}
}
